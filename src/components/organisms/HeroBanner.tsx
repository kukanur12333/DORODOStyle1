import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ArrowRight, Sparkles, Gamepad2, Zap } from 'lucide-react';
import { Button } from '../atoms/Button';
import { Link } from 'react-router-dom';
import { CountdownTimer } from '../molecules/CountdownTimer';

const saleEndDate = new Date();
saleEndDate.setHours(saleEndDate.getHours() + 48);

const slides = [
  {
    id: 1,
    badge: 'AI Streetwear Drop',
    title: 'Generated by DORODO AI Studio',
    subtitle: 'Limited edition streetwear, designed by AI, crafted for you. Experience the future of fashion.',
    cta: 'Shop The Drop',
    link: '/shop',
    image: 'https://images.unsplash.com/photo-1620799140408-edc6d5f9650d?w=1200&fit=crop&q=80',
    icon: <Sparkles size={16} className="text-purple-300" />,
  },
  {
    id: 2,
    badge: 'Play to Earn Rewards',
    title: 'Play & Earn Points → Redeem Discounts',
    subtitle: 'Your next high score could unlock an exclusive discount. Turn your gaming skills into style.',
    cta: 'Play Now',
    link: '/#game-zone',
    image: 'https://images.unsplash.com/photo-1542751371-adc38448a05e?w=1200&fit=crop&q=80',
    icon: <Gamepad2 size={16} className="text-green-300" />,
  },
  {
    id: 3,
    badge: 'Luxury Sale – Limited 48hrs',
    title: 'Flash Deals on Luxury Wear',
    subtitle: 'Don\'t miss out on incredible deals on our premium collections. Time is running out!',
    cta: 'Shop The Sale',
    link: '/shop',
    image: 'https://images.unsplash.com/photo-1540221652346-e5dd6b50f3e7?w=1200&fit=crop&q=80',
    icon: <Zap size={16} className="text-red-300" />,
    isSale: true,
  },
];

const slideVariants = {
  enter: (direction: number) => ({
    x: direction > 0 ? '100%' : '-100%',
    opacity: 0,
  }),
  center: {
    zIndex: 1,
    x: 0,
    opacity: 1,
  },
  exit: (direction: number) => ({
    zIndex: 0,
    x: direction < 0 ? '100%' : '-100%',
    opacity: 0,
  }),
};

export const HeroBanner: React.FC = () => {
  const [[page, direction], setPage] = useState([0, 0]);

  const paginate = (newDirection: number) => {
    setPage([(page + newDirection + slides.length) % slides.length, newDirection]);
  };

  useEffect(() => {
    const interval = setInterval(() => {
      paginate(1);
    }, 7000); // Rotate every 7 seconds
    return () => clearInterval(interval);
  }, [page]);

  const activeSlide = slides[page];

  return (
    <section className="relative h-[85vh] min-h-[650px] bg-black text-white overflow-hidden">
      <AnimatePresence initial={false} custom={direction}>
        <motion.div
          key={page}
          className="absolute inset-0 bg-cover bg-center"
          style={{ backgroundImage: `url(${activeSlide.image})` }}
          custom={direction}
          variants={slideVariants}
          initial="enter"
          animate="center"
          exit="exit"
          transition={{
            x: { type: 'spring', stiffness: 300, damping: 30 },
            opacity: { duration: 0.3 },
          }}
        />
      </AnimatePresence>
      <div className="absolute inset-0 bg-gradient-to-t from-black via-black/70 to-transparent" />

      <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-full flex flex-col justify-center items-center text-center">
        <motion.div
          key={`${page}-content`}
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4, duration: 0.8 }}
          className="max-w-3xl"
        >
          <div className="inline-flex items-center gap-2 bg-white/10 border border-white/20 rounded-full px-4 py-2 mb-6">
            {activeSlide.icon}
            <span className="text-sm font-montserrat">{activeSlide.badge}</span>
          </div>

          <h1 className="text-4xl md:text-6xl font-bold font-montserrat leading-tight mb-6">
            {activeSlide.title}
          </h1>
          
          <p className="text-lg text-gray-300 font-poppins max-w-2xl mx-auto mb-8">
            {activeSlide.subtitle}
          </p>

          <div className="flex flex-col sm:flex-row items-center justify-center gap-4">
            <Link to={activeSlide.link}>
              <Button variant="gold" size="xl" className="group">
                {activeSlide.cta}
                <ArrowRight size={20} className="group-hover:translate-x-1 transition-transform" />
              </Button>
            </Link>
            {activeSlide.isSale && <CountdownTimer endTime={saleEndDate} />}
          </div>
        </motion.div>
      </div>
      
      <div className="absolute bottom-8 left-1/2 -translate-x-1/2 flex space-x-3 z-10">
        {slides.map((_, index) => (
          <button
            key={index}
            onClick={() => setPage([index, index > page ? 1 : -1])}
            className={`w-3 h-3 rounded-full transition-all duration-300 ${
              page === index ? 'bg-white scale-125' : 'bg-white/50 hover:bg-white'
            }`}
            aria-label={`Go to slide ${index + 1}`}
          />
        ))}
      </div>
    </section>
  );
};
